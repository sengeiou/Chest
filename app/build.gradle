apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "26.0.2"
    defaultConfig {
        applicationId "com.stur.chest"
        minSdkVersion 23
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    signingConfigs {
        //used for urovo userdebug
        debug {
            keyAlias 'urovo_userdebug'
            keyPassword '123456'
            storeFile file('../libs-keystores/urovo_userdebug.jks')
            storePassword '123456'
        }
        //used for ivvi userdebug
        /*debug {
            keyAlias 'platform'
            keyPassword 'android'
            storeFile file('../libs-keystores/platform_debug.jks')
            storePassword 'android'
        }*/

        release {
            keyAlias 'urovo_release'
            keyPassword '123456'
            storeFile file('../libs-keystores/urovo_release.jks')
            storePassword '123456'
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.debug
        }
    }
}

dependencies {
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile project(':mylibrary')
    provided files('../libs-keystores/framework.jar')
}

preBuild {
    doLast {
        def imlFile = file(project.name + ".iml")
        println 'Change ' + project.name + '.iml order'
        try {
            def parsedXml = (new XmlParser()).parse(imlFile)
            def jdkNode = parsedXml.component[1].orderEntry.find { it.'@type' == 'jdk' }
            parsedXml.component[1].remove(jdkNode)
            def sdkString = "Android API " + android.compileSdkVersion.substring("android-".length()) + " Platform"
            new Node(parsedXml.component[1], 'orderEntry', ['type': 'jdk', 'jdkName': sdkString, 'jdkType': 'Android SDK'])
            groovy.xml.XmlUtil.serialize(parsedXml, new FileOutputStream(imlFile))
        } catch (FileNotFoundException e) {
            // nop, iml not found
        }
    }
}

