apply plugin: 'com.android.library'

android {
    compileSdkVersion 25
    buildToolsVersion "26.0.3"

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    //provided files('../libs-keystores/framework.jar')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    testCompile 'junit:junit:4.12'
    compile files('../libs-keystores/core-3.2.1.jar')
    compile files('../libs-keystores/httpcore-4.3.2.jar')
    //org.nanohttpd 依赖的一些库
    compile 'commons-fileupload:commons-fileupload:1.3.1'
    compile 'org.pegdown:pegdown:1.4.1'
    compile 'javax.servlet:servlet-api:2.5'
    // http depends
    compile 'com.loopj.android:android-async-http:1.4.9'
    // bus event
    compile 'com.squareup:otto:1.3.8'
    // image loader
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
    // gson
    compile 'com.google.code.gson:gson:2.5'
    compile files('../libs-keystores/gcache-1.0.3.jar')
    compile 'com.tencent.bugly:crashreport:latest.release'
    compile 'com.umeng.analytics:analytics:latest.integration'
}

preBuild {
    doLast {
        def imlFile = file(project.name + ".iml")
        println 'Change ' + project.name + '.iml order'
        try {
            def parsedXml = (new XmlParser()).parse(imlFile)
            def jdkNode = parsedXml.component[1].orderEntry.find { it.'@type' == 'jdk' }
            parsedXml.component[1].remove(jdkNode)
            def sdkString = "Android API " + android.compileSdkVersion.substring("android-".length()) + " Platform"
            new Node(parsedXml.component[1], 'orderEntry', ['type': 'jdk', 'jdkName': sdkString, 'jdkType': 'Android SDK'])
            groovy.xml.XmlUtil.serialize(parsedXml, new FileOutputStream(imlFile))
        } catch (FileNotFoundException e) {
        }
    }
}